- title t('structure.my', element: Issue.model_name.human )

.search-field
  = search_form_for @q,url: issues_dashboard_path do |f|
    .ui.left.icon.fluid.input
      = f.search_field :title_or_comments_content_cont, type: :text, placeholder: t('action.word.search')
      i.icon.search

.ui.hidden.divider

div
  - @issues.each do |issue|

    .ui.segment
      .ui.grid
        .twelve.wide.column
          .ui.header
            - if issue.open?
              i.green.icon.unlock
            - elsif issue.closed?
              i.red.icon.lock
            .content
              = link_to issue.title, project_issue_path(issue.project, issue)

              == " ( #{link_to issue.project.name, project_path(issue.project), {class:'black bold link'} } )"
              .sub.header#issues_index_label
                = "##{issue.sequential_id} "
                => user_tag issue.user, class: 'gray link'
                => t('action.target.created_at', target: '')
                span = time_format_relative_tag(issue.created_at)

                - if issue.planed?
                  = 'ã€‚'
                  - if issue.working?
                    => time_format_relative_tag issue.due_at
                    = t('state.end')
                  - elsif issue.expired?
                    => time_format_relative_tag issue.due_at
                    = t('state.expired')
                  - elsif issue.finished?
                    => time_format_relative_tag issue.due_at
                    = t('state.finish')
                  - else
                    => time_format_relative_tag issue.begin_at
                    = t('state.start')
                span#issues_index_label
                  - issue.labels.each do |label|
                    = render_colored_label label
        .four.wide.column
          - if issue.assignee.present?
            .ui.right.floated.image
              = user_luxury_tag issue.assignee
          - if issue.sprint.present?
            .ui.right.floated.image
              = sprint_luxury_tag issue.sprint

= paginate @issues
