.page-header
  h1.ui.header
    i.rocket.icon
    .content
      = title @project.name
      .sub.header
        = @project.description

.ui.divider
.ui.grid
  .doubling.two.column.row
    .column.right.floated
      h3.ui.dividing.header
        i.icon.tasks
        .content
          = link_to t('structure.list', element: Issue.model_name.human ), project_issues_path
      .ui.top.attached.tabular.menu
        - %w(assigned_to_me opened_by_me opened).each do |type|
          a.item href=project_dashboard_path(@project, params.permit(:event, :issue).merge({issue: type})) class="#{params[:issue] == type ? 'active' : ''}"
            = t("issue.#{type}")
      .ui.bottom.attached.segment
        .ui.selection.divided.list
          - @issues.each do |issue|
            .item
              - if issue.open?
                i.green.icon.unlock
              - elsif issue.closed?
                i.red.icon.lock
              .content
                .header
                  = link_to issue.title, project_issue_path(@project, issue)
                = "##{issue.sequential_id} "
                => user_tag issue.user, class: 'gray link'
                => t('action.target.created_at', target: '')
                span = time_format_relative_tag( issue.created_at )

      h3.ui.dividing.header
        i.icon.tasks
        .content
          = link_to t('structure.list', element: Post.model_name.human ), project_attachments_path
      .ui.segment
        - @posts.each do |post|
          .ui.vertical.segment
            h4.ui.header
              = link_to [@project, post] do
                i.file.blue.text.outline.large.icon
                = post.name
            .content
              .meta
                = render partial: 'sync/attachment/meta', locals: {attachment: post}
              .description
                .ui.basic.segment == post.preview_html
    .column
      = react_component('EventListApp')
