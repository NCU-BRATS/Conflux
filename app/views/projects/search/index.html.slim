= simple_form_for [@project, @search], method: 'get' do |f|
  .ui.grid
    .two.columns.row
      .twelve.wide.column
        = f.input :query, label: false, placeholder: t('project.search')
      .four.wide.column
        = f.button :submit, value: t('action.word.search'), id: 'search_btn', class: 'fluid'

.ui.grid
  .doubling.two.columns.row
    .four.wide.column.right.floated
      .ui.fluid.vertical.menu
        - menu_order = ['issue', 'sprint', 'attachment', 'message']
        - @results.aggregations['types']['buckets'].sort_by {|t| menu_order.index(t['key'])}.each do |type|
          .item class="#{@search.type == type['key'] ? 'active teal' : ''}"
            = t("project.#{type['key'].pluralize}")
            .ui.label class="#{@search.type == type['key'] ? 'teal' : ''}"
              = type['doc_count']

    .twelve.wide.column
      #search_results.ui.divided.items
        - if @results.size > 0
          p.related = t('search.related', count: @results.total)
          = render partial: @search.type, collection: @results
        - else
          #no_result.ui.secondary.segment
            .ui.center.aligned.icon.header
              i.frown.icon
              .content
                = t('search.no_result', query: @search.query, resource: t("project.#{@search.type.pluralize}"))

.ui.hidden.divider

= paginate @results
