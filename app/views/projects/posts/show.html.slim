.ui.comments
  .comment
    .avatar
      = avatar_tag @post.user
    .content
      a.author = @post.user.name
      .metadata = time_format_absolute_tag @post.updated_at, :format => 'MMM Do a h:mm', class: 'date'
      .text #{Post.model_name.human}
.ui.top.attached.segment
  h2.ui.center.aligned.header = @post.name
.ui.attached.segment
  == @post.html
.ui.attached.segment
  - if policy(@post).download?
    = link_to download_project_attachment_path(@project, @post), class: 'ui icon basic button left floated' do
      i.cloud.download.icon
  - if policy(@post).update?
    = link_to edit_project_post_path(@project, @post), class: 'ui icon basic button left floated' do
      i.icon.write
  - if policy(@post).destroy?
    = link_to project_attachment_path(@project, @post), data: {:confirm => t('question.confirm.action', action: t('action.word.delete'))}, :method => :delete, class: 'ui icon basic button left floated' do
      i.icon.trash
  = link_to project_attachment_likes_path(@project, @post.id), :method => :put, remote: true, class: 'ui green icon basic button left floated' do
    - if @post.is_liked_by?(current_user) 
      i.green.heart.icon
    - else
      i.icon.heart
    = ' '
    = @post.total_likes.to_i
  = link_to project_attachments_path, class: 'ui right floated basic green button' do
    i.icon.chevron.left
    = t('action.word.back')

- title "#{@post.name}"

= subscribe_to_ujs @private_pub_channel2

= react_component( 'CommentApp', { comments: @post.comments.includes(:user).asc.as_json(include: :user),
                                   commentable_type: 'attachment',
                                   commentable_record_id: @post.id,
                                   commentable_resource_id: @post.id,
                                   is_user_in_project: @project.has_member?(current_user),
                                   project: @project,
                                   user: current_user })

= subscribe_to_ujs "/projects/#{@project.id}/attachments"

- content_for :javascripts
  javascript:
    var resourceId = #{@post.id};
    PrivatePub.subscribe("/projects/#{@project.id}/attachments", function (res) {
      if(resourceId === res.data.id) {
        location.reload();
      }
    });
